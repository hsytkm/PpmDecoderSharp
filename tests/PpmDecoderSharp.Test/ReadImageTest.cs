namespace PpmDecoderSharp.Test;

public class ReadImageTest
{
    [Theory]
    // P1
    [InlineData(Consts.ImagePathP1_1, 200, 200, 1, "ASCII PBM file created by PBMA_WRITE.")]
    [InlineData(Consts.ImagePathP1_2, 24, 7, 1, "feep.pbm")]
    [InlineData(Consts.ImagePathP1_3, 25, 25, 1, "letter_a.pbma")]
    [InlineData(Consts.ImagePathP1_4, 136, 82, 1, null)]
#if false
    // P2
    [InlineData(Consts.ImagePathP2_1, 24, 7, 15, "feep.ascii.pgm")]
    [InlineData(Consts.ImagePathP2_2, 400, 200, 252, "test02.pgm")]
    [InlineData(Consts.ImagePathP2_3, 600, 600, 255, null)]
    [InlineData(Consts.ImagePathP2_4, 300, 246, 255, "fred.pgm created by PGMA_IO::PGMA_WRITE.")]
    // P3
    [InlineData(Consts.ImagePathP3_1, 300, 300, 244, "pbmlib.ppma created by PPMLIB(PPMA_WRITE).")]
    [InlineData(Consts.ImagePathP3_2, 256, 256, 255, "snail.ppm")]
#endif
    // P4
    [InlineData(Consts.ImagePathP4_1, 25, 25, 1, "letter_a.pbma")]
    [InlineData(Consts.ImagePathP4_2, 24, 7, 1, "feep.pbm")]
    [InlineData(Consts.ImagePathP4_3, 136, 82, 1, null)]
    // P5
    [InlineData(Consts.ImagePathP5_1, 24, 7, 15, null)]
    [InlineData(Consts.ImagePathP5_2, 512, 512, 255, null)]
    [InlineData(Consts.ImagePathP5_3, 300, 246, 255, null)]
    [InlineData(Consts.ImagePathP5_4, 250, 360, 255, "CREATOR: GIMP PNM Filter Version 1.1")]
    // P6
    [InlineData(Consts.ImagePathP6_1, 258, 792, 255, "Image generated by Aladdin Ghostscript (device=ppmraw)")]
    [InlineData(Consts.ImagePathP6_2, 20, 10, 255, null)]
    [InlineData(Consts.ImagePathP6_3, 640, 426, 255, null)]
    public async Task ReadImage_Success(string filePath, int width, int height, int maxLevel, string? comment, CancellationToken cancellationToken = default)
    {
        var ppm = await PpmImage.ReadAsync(filePath, cancellationToken);
        Assert.NotNull(ppm);

        ppm.Width.Should().Be(width);
        ppm.Height.Should().Be(height);
        ppm.MaxLevel.Should().Be(maxLevel);
        ppm.Comment.Should().Be(comment);
    }
}
